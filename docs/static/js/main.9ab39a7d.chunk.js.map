{"version":3,"sources":["Store/models.js","Utils/Routing.js","Utils/Env.js","Store/actions.js","Store/store.js","Store/views.js","Components/Header/Header.js","Components/PageWrapper/PageWrapper.js","Components/Page/Page.js","Components/TextInput/TextInput.js","Components/LiveIndicator/LiveIndicator.js","Components/NavButton/NavButton.js","Modules/Done/Done.js","Modules/Invite/Partials/Title.js","Modules/Invite/Partials/Stream.js","Modules/Invite/Partials/Url.js","Modules/Invite/Invite.js","Modules/Home/Partials/Title.js","Modules/Home/Partials/Effects.js","Modules/Home/Partials/Social.js","Modules/Home/Home.js","Utils/Transformations.js","Modules/VideoPlayer/VideoPlayer.js","Modules/VideoRecorder/VideoRecorder.js","Components/Routes/Routes.js","Components/RoutesAnimator/RoutesAnimator.js","Components/CheckBox/CheckBox.js","Components/RadioButton/RadioButton.js","Components/UploadWidget/UploadWidget.js","Components/UploadedImage/UploadedImage.js","Components/Icon/Icon.js","Components/Loader/Loader.js","Components/IconButton/IconButton.js","Components/Share/Share.js","App.js","index.js","Store/createStore.js"],"names":["Input","types","model","value","optional","string","placeholder","Option","name","maybe","frozen","enabled","boolean","label","logo","info","url","actions","self","toggle","setValue","v","setEnabled","views","checkbox","Object","assign","objectSpread","checked","action","radio","MainStore","startedAtMainPage","needRestart","title","effects","array","socials","videoRef","publicId","error","loading","getShareUrl","params","pathname","concat","window","location","href","replace","arguments","length","undefined","result","forEach","param","i","paramsToQueryString","Env","CLOUD_NAME","UPLOAD_PRESET","UPLOAD_PRESET_OPENER","store","initialSnapshot","liveStream","getLiveStreamInitOptions","targets","cloudName","uploadPreset","transformations","find","t","debug","events","local_stream","stream","attach","setUploadedImage","image","e","afterCreate","getSnapshot","resetStore","applySnapshot","setStartedAtMainPage","val","setLiveStream","err","ls","setError","setURL","response","public_id","filter","trans","setPublicId","setLoading","initLiveStream","initLS","then","newLiveStream","catch","setVideoRef","vr","startLiveStream","start","stopLiveStream","stop","pid","setInputValue","toggleEffect","console","log","setEffectValue","toggleSocial","delUploadedImage","uploadedImage","errorStr","errorJson","JSON","stringify","_ref","push","hlsTarget","fileTarget","selectedSocialMedia","withRouter","props","homeUrl","endsWith","getHomeUrl","react_default","a","createElement","className","Row","noGutters","Col","md","lg","xl","style","display","PageWrapper","Fragment","Components_Header_Header","children","Page_Page","_ref$className","absolute","position","boxSizing","width","xs","padding","margin","TextInput","_React$Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","update","bind","assertThisInitialized","inherits","createClass","key","_this$props","target","_this$props2","_this$props2$classNam","defaultValue","element","valueProp","type","onChange","React","Component","inject","observer","LiveIndicator_LiveIndicator","_ref$circleColor","circleColor","_ref$textColor","textColor","color","NavButton","bgColor","cls","history","to","_ref$type","doBefore","backgroundColor","Button","onClick","Done","state","showShareModal","toggleShareModal","redirectToPlayer","redirectToMain","signUp","setState","prevState","open","_this$props$store","Components_IconButton_IconButton","topAction","icon","text","Modal","isOpen","contentClassName","ModalBody","Components_Share_Share","id","Partials_Title","Stream","Components_Icon_Icon","Url","Components_TextInput_TextInput","lib","Invite","apply","Components_Loader_Loader","Partials_Url","Partials_Stream","Title","EffectList","map","Components_CheckBox_CheckBox","Components_UploadWidget_UploadWidget","Components_RadioButton_RadioButton","toLowerCase","Home","Home_Partials_Title","Partials_Effects","Partials_Social","TRANSFORMATIONS","blur","vignette","transformationRaw","rawTransformations","obj","keys","toNameValuePairs","join","VideoPlayer","queryString","parse","search","match","createRef","_this2","video","addSource","player","source","sourceTypes","format","raw_transformation","cloudinary","Cloudinary","new","cloud_name","videoPlayer","current","fluid","videojs","html5","hls","overrideNative","nativeAudioTracks","nativeVideoTracks","posterOptions","on","mute","play","playerReady","intervalId","setInterval","clearInterval","ref","controls","autoPlay","playsInline","muted","VideoRecorderPage","values","Routes","react_router","exact","path","component","VideoRecorder","RoutesContainer","posed","div","enter","opacity","delay","exit","getBaseName","includes","react_pose_es","Components_Routes_Routes","CheckBox","RadioButton","react","htmlFor","UploadWidget","uploadWidget","createUploadWidget","singleUploadAutoClose","multiple","upload_preset","event","thumbnail_url","_this3","Components_UploadedImage_UploadedImage","backgroundImage","icons","CloudUpload","Slideshow","Vignette","BlurOn","Videocam","Share","PlayCircleOutline","Icon","Tag","Loader","Container","height","mx","Spinner","IconButton","EmailShareButton","EmailIcon","size","round","TwitterShareButton","TwitterIcon","FacebookShareButton","FacebookIcon","LinkedinShareButton","LinkedinIcon","WhatsappShareButton","WhatsappIcon","App","react_router_dom","basename","process","RoutesAnimator","create","ReactDOM","render","index_module","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.9ab39a7d.chunk.js","sourcesContent":["import { types } from 'mobx-state-tree';\n\nconst Input = types.model({\n  value: types.optional(types.string, ''),\n  placeholder: types.optional(types.string, '')\n});\n\nconst Option = types\n  .model({\n    name: types.optional(types.string, ''),\n    value: types.maybe(types.frozen({})),\n    enabled: types.optional(types.boolean, false),\n    label: types.optional(types.string, ''),\n    logo: types.optional(types.string, ''),\n    info: types.optional(types.string, ''),\n    url: types.maybe(Input)\n  })\n  .actions(self => ({\n    toggle() {\n      self.enabled = !self.enabled;\n    },\n    setValue(v) {\n      self.value = v;\n    },\n    setEnabled(v) {\n      self.enabled = v;\n    }\n  }))\n  .views(self => ({\n    get checkbox() {\n      return Object.assign(\n        {},\n        { ...self, checked: self.enabled, action: 'toggleEffect' }\n      );\n    },\n    get radio() {\n      return Object.assign(\n        {},\n        { ...self, checked: self.enabled, action: 'toggleSocial' }\n      );\n    }\n  }));\n\n  const MainStore = {\n    startedAtMainPage: types.optional(types.boolean, false),\n    needRestart: types.optional(types.boolean, false),\n    title: types.maybe(Input),\n    effects: types.array(Option),\n    socials: types.array(Option),\n    videoRef: types.maybe(types.frozen({})),\n    url: types.maybe(types.string),\n    publicId: types.maybe(types.string),\n    error: types.maybe(types.frozen({})),\n    loading: types.optional(types.boolean, true)\n  }\nexport { MainStore };\n","const paramsToQueryString = (params=[]) => {\n  let result = '?';\n  params.forEach((param, i) => {\n    result += `${param.name}=${param.value}`;\n    if (i < params.length - 1) {\n      result += `&`;\n    }\n  });\n\n  return result;\n};\n\nexport const getShareUrl = (publicId, params, pathname) => {\n  return `${window.location.href.replace(\n    pathname,\n    ''\n  )}/videoplayer/${publicId}/${paramsToQueryString(params)}`;\n};\n\nexport const getHomeUrl = (pathname) => {\n  const url = `${window.location.href.replace(\n    pathname,\n    ''\n  )}`;\n  return url.endsWith('/') ? url : url+'/';\n};\n\n//export const getBaseName = ()=>window.location.href.includes('/react-video-live-demo') ? '/react-video-live-demo' : '/';\nexport const getBaseName = ()=>process.env.PUBLIC_URL;","export default {\n    CLD_API_HOST: 'api.cloudinary.com',\n    CLD_RES_HOST:'res.cloudinary.com',\n    CLD_WEB_RTC_HOST:'webrtc-api.cloudinary.com',\n    CLOUD_NAME:'demo-live',\n    UPLOAD_PRESET:'live-stream',\n    UPLOAD_PRESET_OPENER:'live-opener',\n    UPLOAD_PRESET_IMAGES:'images',\n    UPLOAD_WIDGET_PREFIX:'https://widget.cloudinary.com',\n    UPLOAD_TYPE:'upload'\n}\n","import { getSnapshot, applySnapshot } from 'mobx-state-tree';\nimport initLS from 'cloudinary-live-stream';\nimport { getShareUrl } from '../Utils/Routing';\nimport Env from '../Utils/Env';\n\nconst { CLOUD_NAME, UPLOAD_PRESET, UPLOAD_PRESET_OPENER } = Env;\n\nexport default self => {\n  let liveStream = null;\n  let initialSnapshot;\n\n  const getLiveStreamInitOptions = () => {\n    return Object.assign({}, self.targets, {\n      cloudName: CLOUD_NAME,\n      uploadPreset: self.transformations.find(t => t.name === 'intro')\n        ? UPLOAD_PRESET_OPENER\n        : UPLOAD_PRESET,\n      debug: 'all',\n      events: {\n        /*\n          Optional events, not needed for the demo\n        start: function(args) {\n          console.log('start', args);\n        },\n        stop: function(args) {\n          console.log('stop', args);\n        },\n        error: function(error) {\n          console.log('error', error);\n        },\n        */\n        local_stream: function(stream) {\n          //attaching the stream to a video view:\n          liveStream.attach(self.videoRef, stream);\n        }\n      }\n    });\n  };\n\n  function afterCreate() {\n    initialSnapshot = getSnapshot(self);\n  }\n\n  function resetStore() {\n    applySnapshot(self, initialSnapshot); // set store to default\n  }\n\n  function setStartedAtMainPage(val = true) {\n    self.startedAtMainPage = val;\n  }\n\n  function setInputValue(name, value, model) {\n    if (model) {\n      self[model].find(e => e.label === name).setValue(value);\n    } else {\n      self[name].value = value;\n    }\n  }\n\n  function toggleEffect(name) {\n    self.effects.find(e => e.name == name).toggle();\n    console.log('toggled', self.effects.find(e => e.name == name).enabled);\n  }\n\n  function setEffectValue(name, value) {\n    self.effects.find(e => e.name == name).setValue(value);\n  }\n\n  function setUploadedImage(image) {\n    self.effects.find(e => e.name == 'logo').setValue(image);\n  }\n\n  function delUploadedImage() {\n    setUploadedImage({});\n  }\n\n  function toggleSocial(label) {\n    self.socials.forEach(e => {\n      e.setEnabled(e.label === label);\n    });\n  }\n\n  function setLoading(loading) {\n    self.loading = loading;\n  }\n\n  function setLiveStream(err, ls, pathname) {\n    if (err) {\n      self.setError(err);\n    } else {\n      liveStream = ls;\n      self.setURL(\n        getShareUrl(\n          ls.response.public_id,\n          self.transformations.filter(trans => trans.name !== 'intro'),\n          pathname\n        )\n      );\n      self.setPublicId(ls.response.public_id);\n      self.setError(false);\n    }\n    self.setLoading(false);\n  }\n\n  function setError(err) {\n    self.error = err;\n  }\n\n  function setURL(url) {\n    self.url = url;\n  }\n\n  function setPublicId(pid) {\n    self.publicId = pid;\n  }\n\n  function setVideoRef(vr) {\n    self.videoRef = vr;\n  }\n\n  function initLiveStream(pathname) {\n    self.setLoading(true);\n\n    initLS(getLiveStreamInitOptions())\n      .then(newLiveStream => {\n        self.setLiveStream(null, newLiveStream, pathname);\n      })\n      .catch(err => {\n        self.setLiveStream(err);\n      });\n  }\n\n  function startLiveStream(videoRef) {\n    //Flag for Main Page to request a fresh store\n    self.needRestart = true;\n\n    if (liveStream) {\n      self.setVideoRef(videoRef);\n      liveStream.start(self.publicId);\n    }\n  }\n\n  function stopLiveStream() {\n    if (liveStream) {\n      liveStream.stop();\n    }\n  }\n\n  return {\n    afterCreate,\n    resetStore,\n    setStartedAtMainPage,\n    setLiveStream,\n    initLiveStream,\n    setVideoRef,\n    startLiveStream,\n    stopLiveStream,\n    setPublicId,\n    setURL,\n    setError,\n    setLoading,\n    setInputValue,\n    toggleEffect,\n    setEffectValue,\n    toggleSocial,\n    setUploadedImage,\n    delUploadedImage\n  };\n};\n","import { types } from 'mobx-state-tree';\nimport { MainStore } from './models';\nimport actions from './actions';\nimport views from './views';\n\nconst store = types\n  .model('MainStore', MainStore)\n  .actions(actions)\n  .views(views);\n\nexport default store;\n","export default self => ({\n  get uploadedImage() {\n    return self.effects.find(e => e.name == 'logo').value;\n  },\n  get errorStr() {\n    if (!self.error) {\n      return '';\n    }\n    const errorJson = JSON.stringify(self.error);\n    return errorJson === '{}' ? '' : errorJson;\n  },\n  get transformations() {\n    let transformations = [];\n    self.effects.forEach(({ name, value, enabled }) => {\n      if (enabled) {\n        if (name === 'logo') {\n          if (value && value.publicId) {\n            transformations.push({ name, value: value.publicId });\n          }\n        } else {\n          transformations.push({ name, value: true });\n        }\n      }\n    });\n    return transformations;\n  },\n  get targets() {\n    let targets = {\n      hlsTarget: true,\n      fileTarget: true\n    };\n\n    let selectedSocialMedia = self.socials.filter(e => e.enabled);\n    if (selectedSocialMedia.value) {\n      targets[selectedSocialMedia.name + 'Uri'] = selectedSocialMedia.value;\n    }\n    return targets;\n  }\n});\n","import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport { Col, Row } from 'reactstrap';\nimport { getHomeUrl } from '../../Utils/Routing';\nimport './Header.css';\n\nconst Header = (props) => {\n    const homeUrl = getHomeUrl(props.location.pathname);\n    return (\n        <div className=\"header header-bg\">\n            <Row noGutters className=\"header\">\n                <Col md={10} lg={8} xl={6} className=\"offset-md-1 offset-lg-2 offset-xl-3 header-bg\">\n                <a style={{display:\"block\"}} href={homeUrl}>\n                    <div className=\"header-grid align-items-center justify-content-center\">\n                        <div className=\"header-logo\" />\n                        <div className=\"header-text header-text-grid\">\n                            <div className=\"header-title\">Cloudinary Live Streaming</div>\n                            <div className=\"header-sub-title\">Beta</div>\n                        </div>\n                    </div>\n                    </a>\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default withRouter(Header);\n\n","import React from 'react';\nimport { Header, Footer } from '../Components';\n\nexport default props => {\n  return (\n    <React.Fragment>\n      <Header />\n      {props.children}\n      <div className=\"footer\" />\n    </React.Fragment>\n  );\n};\n","import React from 'react';\n\nimport { Col, Row } from 'reactstrap';\n\nimport './Page.css';\n\nexport default ({ className = '', children, absolute }) => {\n  if (absolute) {\n    return (\n      <Row\n        noGutters\n        className=\"h-100\"\n        style={{\n          position: 'absolute',\n          boxSizing: 'content-box',\n          width: '110%'\n        }}\n      >\n        <Col xs={12} className=\"w-100 h-100\" style={{ padding: 0, margin: 0 }}>\n          <div className=\"bg-blur\" />\n          <div className=\"bg-opacity\">{children}</div>\n        </Col>\n      </Row>\n    );\n  }\n  return (\n    <Row\n      noGutters\n      className={'height-full ' + className}\n      style={absolute ? { position: 'absolute' } : {}}\n    >\n      <Col\n        md={10}\n        lg={8}\n        xl={6}\n        className=\"offset-md-1 offset-lg-2 offset-xl-3 no-gutters\"\n      >\n        <div className=\"bg-blur\" />\n        <div className=\"bg-opacity\">{children}</div>\n      </Col>\n    </Row>\n  );\n};\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { Input } from 'reactstrap';\n\nconst TextInput = class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n  }\n\n  update(e) {\n    const { store, name, model } = this.props;\n    store.setInputValue(name, `${e.target.value}`, model);\n  }\n\n  render() {\n    const { store, name, model, className=\"input-orange\", defaultValue} = this.props;\n    const element = model ? store[model].find(e=>e.label===name) : store[name];\n    let placeholder = \"\";\n    if (model || element){\n      placeholder = model ? element.url.placeholder : element.placeholder;\n    }\n\n    const valueProp = defaultValue ? {defaultValue} : {value: element ? element.value : \"\"};\n\n    return (\n        <input\n          type=\"text\"\n          name={name}\n          className={className}\n          placeholder={placeholder}\n          onChange={defaultValue ? null :this.update}         \n          {...valueProp}\n        />\n    );\n  }\n};\n\nexport default inject('store')(observer(TextInput));\n","import React from 'react';\nimport './LiveIndicator.css';\n\nexport default ({circleColor=\"rgb(250,138,33)\", textColor=\"white\"}) => {\n    return (\n        <div className=\"center\" style={{color:textColor}}>\n        <span className=\"live-indicator\">\n        <span className=\"flashit\" style={{color:circleColor}}>\n        &#9679;\n        </span>\n        Live</span>\n        </div>\n    );\n}\n","import React from 'react';\nimport { Button } from 'reactstrap';\nimport { Col, Row } from 'reactstrap';\n\nexport default ({\n  color,\n  bgColor,\n  cls,\n  history,\n  to,\n  type = 'button',\n  children,\n  doBefore\n}) => {\n  const style = {};\n  if (color) {\n    style.color = color;\n  }\n\n  if (bgColor) {\n    style.backgroundColor = bgColor;\n  }\n  return (\n<Col xs=\"12\" className=\"button-bottom\">\n      <Row className=\"justify-content-center align-items-center\">\n      <Button\n      style={style}\n      color={color || 'primary'}\n      className={'navbutton ' + cls}\n      type={type}\n      onClick={() => {\n        if (doBefore) {\n          doBefore();\n        }\n        history.push(to);\n      }}\n    >\n      {children}\n    </Button>\n      </Row>\n    </Col>\n  );\n};\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { Page, Share, IconButton } from '../../Components';\n\n\nimport {\n  Modal,\n  ModalBody,\n  Col,\n  Button\n} from 'reactstrap';\n\nconst Done = class extends React.Component {\n  constructor(props) {\n    super(props);\n    if (!props.store.url) {\n      props.history.push('/');\n    }\n\n    this.state={\n      showShareModal:false\n    }\n\n    this.toggleShareModal = this.toggleShareModal.bind(this);\n    this.redirectToPlayer = this.redirectToPlayer.bind(this);\n    this.redirectToMain = this.redirectToMain.bind(this);\n    this.signUp = this.signUp.bind(this);\n  }\n\n  toggleShareModal(){\n    this.setState(prevState => ({\n      showShareModal: !prevState.showShareModal\n    }));\n  }\n\n  redirectToPlayer(){\n    const { history } = this.props;\n    const {publicId} = this.props.store;\n    history.push('/videoplayer/'+publicId);\n  }\n\n  redirectToMain(){\n    const { history } = this.props;\n    history.push('/');\n  }\n\n  signUp(){\n    window.open(\n      'https://cloudinary.com/users/register/free',\n      '_blank'\n    );\n  }\n\n  render() {\n    const {title, url} = this.props.store;\n    return (\n      <Page className=\"text-white\">\n        <Col xs={12} className=\"center h-100\">\n          <h6 className=\"text-orange pt-10\">{title.value}</h6>\n          <h6 className=\"mb-20\">Live Stream Ended</h6>\n\n          <IconButton topAction icon=\"Share\" text=\"Share\" onClick={this.toggleShareModal}/>\n          <Modal isOpen={this.state.showShareModal} toggle={this.toggleShareModal} contentClassName=\"modal-share\">\n          <ModalBody>\n            <Share url={url}/>\n          </ModalBody>\n        </Modal>\n\n          <IconButton icon=\"PlayCircleOutline\" text=\"Watch Again\" onClick={this.redirectToPlayer}/>\n          <IconButton icon=\"Videocam\" text=\"New Stream\" onClick={this.redirectToMain}/>\n          \n          <div className=\"sign-up-container\">\n          <Col xs={12} className=\"center\">\n          <div className=\"cloudinary-logo-with-text\"></div>\n          </Col>\n          <Col xs={12} className=\"center\">\n          <div className=\"mb-10\">Read more @ Cloudinary</div>\n          \n          <Button id=\"stop-button\" className=\"button-orange bold\" onClick={this.signUp}>SIGN UP FOR FREE</Button>\n          </Col>   \n          </div>\n        </Col>\n      </Page>\n    );\n  }\n};\n\nexport default inject('store')(observer(Done));\n","import React from 'react';\nimport { Row, Col } from 'reactstrap';\n\nexport default () => {\n  return (\n    <React.Fragment>\n      <Col xs={12} className=\"center title-top\">\n        <h4>Invite people to watch your live stream</h4>\n      </Col>\n      <Col xs={12} className=\"center\">\n        <hr />\n      </Col>\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport { Col, Row } from 'reactstrap';\nimport { NavButton, Icon } from '../../../Components';\n\nconst Stream = ({ history }) => {\n  return (\n    <Col xs=\"12\" className=\"button-bottom\">\n      <Row className=\"justify-content-center align-items-center bottom-text center\">\n        <hr />\n        <div className=\"w-100\">\n          <p className=\"text-small\">\n            Clicking the button below will start your streaming session. Are you\n            ready to go live?\n          </p>\n        </div>\n        <NavButton to=\"/videorecorder\" history={history}>\n          <Icon name={'Videocam'} />\n          Start Streaming\n        </NavButton>\n      </Row>\n    </Col>\n  );\n};\n\nexport default Stream;\n","import React from 'react';\nimport { Col, Row } from 'reactstrap';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Button } from 'reactstrap';\nimport {TextInput} from '../../../Components';\nconst Url = ({ url }) => {\n  return (\n    <React.Fragment>\n      <Col xs={12}>\n      <div className=\"mt-40\">\n        <p>URL</p>\n        <div className=\"border-bottom-orange\">\n        <TextInput className=\"input-orange\" defaultValue={url} type=\"text\"/>\n        </div>\n        </div>\n      </Col>\n      <Col xs={12} className=\"center\">\n        <CopyToClipboard text={url} className=\"mt-20 mb-20\">\n          <Button>Copy link to clipboard</Button>\n        </CopyToClipboard>\n      </Col>\n      </React.Fragment>\n  );\n};\n\nexport default Url;\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { Page, Share, Loader } from '../../Components';\nimport { Row, Col } from 'reactstrap';\nimport { Title, Url, Stream } from './Partials';\n\nconst Invite = class extends React.Component {\n  componentDidMount() {\n    this.props.store.initLiveStream(this.props.location.pathname);\n  }\n\n  render() {\n    const { store } = this.props;\n    const { url, errorStr: error} = store;\n\n    if (store.loading) {\n      return (\n        <Page>\n          <Loader text=\"Initializing the live streaming session...\" />\n        </Page>\n      );\n    }\n\n    return (\n      <Page className=\"text-white\">\n        <Title />\n        <Url url={url} />\n        <Share url={url} className=\"mt-20\" />\n        <Col xs=\"12\" className=\"button-bottom\">\n        <Row className=\"\">\n          <p>{error}</p>\n        </Row>\n        </Col>\n        <Stream {...this.props} />\n      </Page>\n    );\n  }\n};\n\nexport default inject('store')(observer(Invite));\n","import React from 'react';\nimport { Col } from 'reactstrap';\nimport { TextInput } from '../../../Components';\n\nconst Title = () => {\n  return (\n    <Col xs=\"12\" className=\"mb-20\">\n      <label className=\"text-white push-down\">Live streaming title</label>\n      <TextInput name=\"title\" />\n    </Col>\n  );\n};\n\nexport default Title;\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { Row, Col } from 'reactstrap';\nimport { CheckBox, UploadWidget } from '../../../Components';\n\nconst EffectList = inject('store')(\n  observer(({ store }) => {\n    return store.effects.map((e, i) => {\n      return (\n        <Row key={i}>\n          <Col xs={12} key={i}>\n            <CheckBox {...e.checkbox} />\n          </Col>\n        </Row>\n      );\n    });\n  })\n);\n\nconst isLogoEnabled = effects => {\n  let e = effects.find(e => e.name == 'logo');\n  return e.enabled;\n};\n\nconst Effects = props => {\n  const { store } = props;\n  return (\n    <Col xs={12} className=\"text-white\">\n      <Row>\n        <Col xs={12}>\n          <h4>Effects</h4>\n        </Col>\n      </Row>\n      <Row>\n        <Col xs={9}>\n          <EffectList />\n        </Col>\n        <Col xs={3}>\n          <div className=\"float-right\">\n            {isLogoEnabled(store.effects) ? <UploadWidget /> : null}\n          </div>\n        </Col>\n      </Row>\n      <hr />\n    </Col>\n  );\n};\n\nexport default inject('store')(observer(Effects));\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { Row, Col } from 'reactstrap';\nimport { RadioButton, TextInput } from '../../../Components';\n\nconst showInput = radio => {\n  return radio.label.toLowerCase() !== 'none' && radio.enabled;\n};\n\nconst renderSocials = socials => {\n  return socials.map((e, i) => {\n    return (\n      <Row key={i}>\n        <Col xs={12}>\n          <RadioButton {...e.radio} />\n          {showInput(e) && (\n            <div className=\"social-input-container\">\n            <div>\n            <p className=\"text-medium\">URL</p>\n            </div>\n            <div>\n            <TextInput name={e.label} model=\"socials\" className=\"input-orange social-input\" type=\"text\"/>\n            </div>\n            <p></p>\n            <p className=\"text-small\">{e.info}</p>\n            </div>\n          )}\n        </Col>\n      </Row>\n    );\n  });\n};\n\nconst Social = props => {\n  const { store } = props;\n  return (\n    <Col xs={12} className=\"text-white\">\n      <h4>Stream to social media</h4>\n      {renderSocials(store.socials)}\n      <hr />\n    </Col>\n  );\n};\n\nexport default inject('store')(observer(Social));\n","import React from 'react';\nimport { Page, NavButton, Loader } from '../../Components';\nimport { inject, observer } from 'mobx-react';\nimport { Title, Effects, Social } from './Partials';\nimport './Home.css';\n\nconst Home = class extends React.Component {\n  componentDidMount() {\n    this.props.store.setStartedAtMainPage();\n    if (this.props.store.needRestart) {\n      this.props.store.resetStore();\n    }\n  }\n\n  render() {\n    const { history } = this.props;\n\n    return (\n      <Page>\n        <Title />\n        <Effects />\n        <Social />\n        <NavButton cls=\"arrow\" to=\"/invite\" history={history}>\n          →\n        </NavButton>\n      </Page>\n    );\n  }\n};\n\nexport default inject('store')(observer(Home));\n","const TRANSFORMATIONS = {\n  blur: () => 'e_blur',\n  logo: logo => `l_${logo},w_100,g_north_west,x_10,y_10`,\n  vignette: () => 'e_vignette:60'\n};\n\nconst toNameValuePairs = obj => {\n  const keys = Object.keys(obj);\n  if (keys && keys.length) {\n    return keys.map(key => {\n      return { name: key, value: obj[key] };\n    });\n  }\n  return [];\n};\n\nconst transformationRaw = transformations => {\n  const rawTransformations = ['x_0'];\n\n  toNameValuePairs(transformations).forEach(({ name, value }) => {\n    if (TRANSFORMATIONS[name]) {\n      rawTransformations.push(TRANSFORMATIONS[name](value));\n    }\n  });\n\n  return rawTransformations.join('/');\n};\n\nexport { transformationRaw };\n","import React from 'react';\nimport { Row, Col } from 'reactstrap';\nimport { Page, Loader } from '../../Components';\nimport { inject, observer } from 'mobx-react';\nimport Env from '../../Utils/Env';\nimport queryString from 'query-string';\nimport { transformationRaw } from '../../Utils/Transformations';\n\nconst VideoPlayer = class extends React.Component {\n  constructor(props) {\n    super(props);\n    //this.getSource = this.getSource.bind(this);\n    this.transformations = queryString.parse(this.props.location.search);\n    this.publicId = this.props.match.params.publicId;\n    console.log(this.publicId);\n    this.videoRef = React.createRef();\n    this.state = {};\n  }\n\n  /*\n  getSource(type) {\n    const publicId = 'x_0/' + this.props.match.params.publicId;\n    return `https://res.cloudinary.com/${\n      Env.CLOUD_NAME\n    }/video/upload/${publicId}.${type}`;\n  }\n  */\n\n  componentDidMount() {\n    const video = this.videoRef;\n    const {publicId, transformations} = this;\n    console.log('publicId:', publicId);\n\n    //when player is ready\n    const addSource = () => {\n      return player.source(publicId, {\n        sourceTypes: ['hls'],\n        format: 'm3u8',\n        type: Env.UPLOAD_TYPE,\n        raw_transformation: transformationRaw(transformations)\n      });\n    };\n\n    //create Cloudinary object\n    const cld = window.cloudinary.Cloudinary.new({\n      cloud_name: Env.CLOUD_NAME\n    });\n\n    //create player\n    const player = cld.videoPlayer(\n      video.current,\n      {\n        fluid: true,\n        videojs: {\n          html5: {\n            hls: { overrideNative: true },\n            nativeAudioTracks: false,\n            nativeVideoTracks: false\n          }\n        },\n        /**\n         * To enable Google Analytics uncomment this code\n         * and include the Google Analytics code snippet in your page\n         *\n         * analytics: {\n         *  events: ['play', 'pause', 'ended', { type: 'percentsplayed', percents: [10, 40, 70, 90] }, 'error']\n         * },\n         */\n\n        posterOptions: {\n          publicId: 'live-video-streaming'\n        }\n      },\n      () => {\n        addSource();\n      }\n    );\n\n    player.on('error', () => console.log('error'));\n\n    player.on('loadedmetadata', () => {\n      console.log('loadedmetadata');\n      player.mute();\n      player.play();\n      this.setState({ playerReady: true });\n    });\n\n    const intervalId = setInterval(() => {\n      if (!this.state.playerReady) {\n        addSource();\n      } else {\n        clearInterval(this.state.intervalId);\n        player.mute();\n      }\n    }, 1000);\n    this.setState({ intervalId: intervalId });\n  }\n\n  render() {\n    const video = this.videoRef;\n    const playerReady = this.state.playerReady;\n\n    return (\n      <Page>\n        <div className=\"video-container-outer\">\n        <div xs={12} className=\"center relative\">\n        {!playerReady && (\n            <Page absolute>\n              <Loader text=\"Hang on a second. We’re loading the video stream you requested.\" />\n            </Page>\n          )}\n            <video\n              ref={video}\n              className=\"cld-video-player\"\n              controls\n              autoPlay\n              playsInline\n              muted\n            />\n          </div>\n          </div>\n      </Page>\n    );\n  }\n};\n\nexport default inject('store')(observer(VideoPlayer));\n\n/*\n\n\n      <Page>\n        <Row className=\"justify-content-center align-items-center mg-0\">\n        {!playerReady && (\n            <Page absolute>\n              <Loader text=\"Hang on a second. We’re loading the video stream you requested.\" />\n            </Page>\n          )}\n          <Col xs={12} className=\"mt-20 center video-container\">\n            <video\n              ref={video}\n              className=\"cld-video-player\"\n              controls\n              autoPlay\n              playsInline\n              muted\n            />\n          </Col>\n        </Row>\n      </Page>\n\n\n*/\n","import React from 'react';\nimport { Row, Col } from 'reactstrap';\nimport { Page, NavButton, LiveIndicator } from '../../Components';\nimport { inject, observer } from 'mobx-react';\n\nimport './VideoRecorder.css';\n\nconst VideoRecorderPage = class extends React.Component {\n  constructor(props) {\n    super(props);\n    if (!props.store.url) {\n      props.history.push('/');\n    }\n\n    this.videoRef = React.createRef();\n    this.startLiveStream = this.startLiveStream.bind(this);\n    this.stopLiveStream = this.stopLiveStream.bind(this);\n  }\n\n  startLiveStream() {\n    this.props.store.startLiveStream(this.videoRef.current);\n  }\n\n  stopLiveStream() {\n    this.props.store.stopLiveStream();\n    //this.show call to action\n  }\n\n  componentDidMount() {\n    this.startLiveStream();\n  }\n\n  render() {\n    const stop = this.stopLiveStream;\n    const { history, values } = this.props;\n    const video = this.videoRef;\n    return (\n      <Page>\n        <Col xs={12} className=\"center\">\n          <LiveIndicator />\n        </Col>\n        <div className=\"video-recorder-container-outer\">\n          <div xs={12} className=\"center relative\">\n            <video\n              ref={video}\n              className=\"cld-video-recorder\"\n              id=\"video\"\n              autoPlay\n              muted=\"muted\"\n              playsInline\n            />\n          </div>\n        </div>\n        <Col xs={12} className=\"center button-bottom\">\n          <NavButton\n            cls=\"stop\"\n            color=\"white\"\n            bgColor=\"rgb(250,138,33)\"\n            doBefore={stop}\n            to=\"/done\"\n            history={history}\n          >\n            &#9632;\n          </NavButton>\n        </Col>\n      </Page>\n    );\n  }\n};\n\nexport default inject('store')(observer(VideoRecorderPage));\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport {\n    Home,\n    Invite,\n    VideoPlayer,\n    VideoRecorder,\n    Done\n  } from '../../Modules';\n\nconst Routes = ({location}) => {\n  return (\n    <Switch location={location}>\n        <Route\n          exact\n          path=\"/\"        \n          key=\"home\"\n          component={Home}\n        />\n        <Route\n          path=\"/invite\"\n          key=\"invite\"\n          component={Invite}\n        />\n        <Route\n          path=\"/videorecorder\"\n          key=\"videorecorder\"\n          component={VideoRecorder}\n        />\n        <Route\n          path=\"/videoplayer/:publicId\"\n          key=\"videoplayer\"\n          component={VideoPlayer}\n        />\n        <Route\n          path=\"/done\"\n          key=\"done\"\n          component={Done}\n        />\n        <Route\n          path=\"/:other\"\n          key=\"other\"\n          component={Home}\n        />\n      </Switch>\n  );\n};\n\nexport default Routes;","import React from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { inject, observer } from 'mobx-react';\nimport posed, { PoseGroup } from 'react-pose';\nimport { PageWrapper, Routes } from '../Components';\nimport { getBaseName } from '../../Utils/Routing';\n\nconst RoutesContainer = posed.div({\n  enter: { opacity: 1, delay: 300 },\n  exit: { opacity: 0 }\n});\n\nconst RoutesAnimator = ({ store, location }) => {\n  const { startedAtMainPage } = store;\n  const { pathname } = location;\n  const redirectToMain =\n    !startedAtMainPage &&\n    !(pathname === '/' || pathname === getBaseName() + '/') &&\n    !pathname.includes('/videoplayer/');\n\n  //redirect to home page if we're not livestriming or playing a video.\n  return redirectToMain ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <PageWrapper>\n      <PoseGroup>\n        <RoutesContainer key={location.pathname + location.key}>\n          <Routes location={location} />\n        </RoutesContainer>\n      </PoseGroup>\n    </PageWrapper>\n  );\n};\n\nexport default inject('store')(observer(withRouter(RoutesAnimator)));\n","import React, { Fragment } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { Icon } from '../Components';\n\nconst CheckBox = class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n  }\n\n  update(e) {\n    const { store, action, name } = this.props;\n    store[action](name);\n  }\n\n  render() {\n    const { name, label, logo, checked } = this.props;\n    return (\n      <div className=\"checkbox-flex\">\n        <input type=\"checkbox\"\n                  name={name}\n                  onChange={this.update}\n                  checked={checked}\n         />            \n            <label className=\"checkbox-label\"><Icon name={logo}/>{label}</label>\n      </div>\n    );\n  }\n};\n\nexport default inject('store')(observer(CheckBox));\n","import React, { Fragment } from 'react';\nimport { inject, observer } from 'mobx-react';\n\nconst RadioButton = class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n  }\n\n  update(e) {\n    const { store, action, label } = this.props;\n    store[action](label);\n  }\n\n  render() {\n    const { name, label, checked } = this.props;\n    return (\n      <Fragment>\n          <input\n            type=\"radio\"\n            name={name}\n            onChange={this.update}\n            checked={checked}\n            value={name}\n          />\n            <label htmlFor={name} className=\"radio-label\">\n              \n              <span className={`icon ${name}-icon`} />\n              {label}\n\n            </label>\n      </Fragment>\n    );\n  }\n};\n\nexport default inject('store')(observer(RadioButton));\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { Button } from 'reactstrap';\nimport Env from '../../Utils/Env';\nimport { UploadedImage } from '../Components';\n\nconst Image = ({ url, publicId }) => {\n  return <img src={url} alt=\"logo\"/>;\n};\n\nconst UploadWidget = class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.uploadWidget = null;\n  }\n\n  componentDidMount(){\n    this.uploadWidget = window.cloudinary.createUploadWidget(\n        {\n          singleUploadAutoClose: true,\n          multiple: false,\n          cloud_name: Env.CLOUD_NAME,\n          upload_preset: Env.UPLOAD_PRESET_IMAGES\n        },\n        (error, result) => {\n          if (result.event === 'success') {\n            const url = result.info.thumbnail_url;\n            const publicId = result.info.public_id;\n            this.props.store.setUploadedImage({url, publicId});\n          }\n        }\n      );\n  }\n  \n\n  render() {\n    const uploadedImage = this.props.store.uploadedImage;\n\n    //image already uploaded so show image\n    if (uploadedImage.url) {\n        return <UploadedImage {...uploadedImage} />;\n    }\n\n    //no image so show upload button\n    return (\n      <Button\n        className=\"bg-light text-black\"\n        onClick={() => this.uploadWidget.open()}\n      >\n        Upload\n      </Button>\n    );\n  }\n};\n\nexport default inject('store')(observer(UploadWidget));\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport './UploadedImage.css'\n\n\nconst UploadedImage = (props) => {\n        return (\n            <div className=\"uploaded-image\" style={{backgroundImage:`url(${props.url})`}}>\n            <div className=\"float-right\">\n                <button onClick={props.store.delUploadedImage}>X</button>\n            </div>\n            </div>\n        );\n}\n\nexport default inject('store')(observer(UploadedImage));","import React from 'react';\nimport CloudUpload from '@material-ui/icons/CloudUpload';\nimport Slideshow from '@material-ui/icons/Slideshow';\nimport Vignette from '@material-ui/icons/Vignette';\nimport BlurOn from '@material-ui/icons/BlurOn';\nimport Videocam from '@material-ui/icons/Videocam';\nimport Share from '@material-ui/icons/Share';\nimport PlayCircleOutline from '@material-ui/icons/PlayCircleOutline';\n\nconst icons = {\n  CloudUpload,\n  Slideshow,\n  Vignette,\n  BlurOn,\n  Videocam,\n  Share,\n  PlayCircleOutline\n};\n\nconst Icon = ({ className, name }) => {\n    console.log(\"tag name:\", name);\n  const Tag = icons[name];\n  return <Tag className={className || 'svg-icons'} />;\n};\n\nexport default Icon;\n","import React from 'react';\nimport { Spinner, Container, Row, Col } from 'reactstrap';\n\n\nconst Loader = ({text, absolute}) => {\n  return (\n      <Container className=\"h-100 text-white\" style={absolute ? {position:\"absolute\"}: {}}>\n        <Row style={{ height: '100px  ' }} />\n        <Row className=\"justify-content-center align-items-center\">\n          <Col mx={12} className=\"text-center\">\n          <Spinner className=\"spinner-size\" color=\"light\"/>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-center align-items-center\">\n          <Col mx={12} className=\"text-center\">\n            <h6>{text}</h6>\n          </Col>\n        </Row>\n      </Container>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport { Icon } from '../Components';\nimport { Col, Row } from 'reactstrap';\n\nconst IconButton = props => {\n  const { icon, text, topAction, onClick } = props;\n  const className = 'call-to-action ' + (topAction ? 'call-to-action-top' : '');\n  return (\n    <Col xs={12} className={className} onClick={onClick}>\n      <Row className=\"h-100\">\n        <span className=\"align-self-center\">\n          <Icon name={icon} className=\"svg-icons-big\"/>\n          {text}\n        </span>\n      </Row>\n    </Col>\n  );\n};\n\nexport default IconButton;\n","import React from 'react';\nimport { Row, Col } from 'reactstrap';\nimport {\n  EmailShareButton,\n  TwitterShareButton,\n  FacebookShareButton,\n  LinkedinShareButton,\n  WhatsappShareButton,\n  EmailIcon,\n  TwitterIcon,\n  FacebookIcon,\n  LinkedinIcon,\n  WhatsappIcon\n} from 'react-share';\n\nconst Share = ({ url, className=\"\" }) => {\n  return (\n    <Col xs={12} className={className}>\n    <Row className=\"justify-content-center align-items-center\">\n      <EmailShareButton url={url} >\n        <EmailIcon size={32} round={true} />\n      </EmailShareButton>\n      <TwitterShareButton url={url} >\n        <TwitterIcon size={32} round={true} />\n      </TwitterShareButton>\n      <FacebookShareButton url={url} >\n        <FacebookIcon size={32} round={true} />\n      </FacebookShareButton>\n      <LinkedinShareButton url={url} >\n        <LinkedinIcon size={32} round={true} />\n      </LinkedinShareButton>\n      <WhatsappShareButton url={url} >\n        <WhatsappIcon size={32} round={true} />\n      </WhatsappShareButton>\n      </Row>\n    </Col>\n  );\n};\n\nexport default Share;\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { getBaseName } from './Utils/Routing';\nimport { RoutesAnimator } from './Components';\n\nimport './App.css';\n\n/**\n * App contains a router that switches between pages.\n */\nconst App = props => (\n  <div id=\"app\" className=\"bg app-container\">\n    <BrowserRouter history={props.history} basename={getBaseName()}>\n      <Route component={RoutesAnimator} />\n    </BrowserRouter>\n  </div>\n);\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'mobx-react';\nimport createStore from './Store/createStore';\n\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nconst store = createStore();\n\n/**\n * Our live streaming demo app starting point.\n * Provides a store to the App component.\n */\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById('root')\n);","import store from './store';\nexport default () =>\n  store.create({\n    title: { placeholder: 'My live video', value: 'My live video' },\n    effects: [\n      {\n        name: 'logo',\n        value: {},\n        label: 'Add your logo',\n        logo: 'CloudUpload',\n        enabled: false\n      },\n      {\n        name: 'intro',\n        value: {},\n        label: 'Add intro animation',\n        logo: 'Slideshow',\n        enabled: false\n      },\n      {\n        name: 'vignette',\n        value: {},\n        label: 'Apply vignette border',\n        logo: 'Vignette',\n        enabled: false\n      },\n      {\n        name: 'blur',\n        value: '',\n        label: 'Blur your video',\n        logo: 'BlurOn',\n        enabled: false\n      }\n    ],\n    socials: [\n      {\n        name: 'social',\n        value: '',\n        label: 'None',\n        logo: '',\n        enabled: true\n      },\n      {\n        name: 'social',\n        value: '',\n        label: 'Facebook',\n        logo: 'facebook',\n        enabled: false,\n        info:\n          'Enter the Server URL and Stream Key separated by a slash (/), available from the Facebook Create Live Stream page.',\n        url: { placeholder: 'rtmp://', value: '' }\n      },\n      {\n        name: 'social',\n        value: '',\n        label: 'Youtube',\n        logo: 'youtube',\n        enabled: false,\n        info:\n          'Enter the Server URL and Stream Key separated with a slash (/), available from your YouTube Live Dashboard.',\n        url: { placeholder: 'rtmp://', value: '' }\n      }\n    ]\n  });\n"],"sourceRoot":""}